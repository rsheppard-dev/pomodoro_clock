{"version":3,"sources":["components/Break.js","components/Session.js","components/Timer.js","components/Header.js","components/Buttons.js","components/Audio.js","App.js","index.js","sounds/beep.mp3"],"names":["Break","_ref","length","setLength","active","react_default","a","createElement","id","onClick","disabled","index_es","icon","Session","setTimer","newLength","Timer","timer","sessionState","minutes","concat","Math","floor","seconds","displayTimer","Header","Buttons","reset","handleStartStop","iconColor","style","color","Audio","audio","ref","src","sound","type","library","add","faPlusSquare","faMinusSquare","faPlay","faPause","faHistory","App","useRef","undefined","styles","_useState","useState","_useState2","Object","slicedToArray","sessionLength","setSessionLength","_useState3","_useState4","breakLength","setBreakLength","_useState5","_useState6","setSessionState","_useState7","_useState8","_useState9","_useState10","intervalId","setIntervalId","_useState11","_useState12","bgColor","setBgColor","useEffect","current","play","percentage","document","body","backgroundColor","className","load","clearInterval","newIntervalId","setInterval","prevTimer","ReactDOM","render","StrictMode","src_App","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.4601a957.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default function Break({ length, setLength, active }) {\r\n\r\n    const handleIncrement = () => {\r\n        length !== 60 && setLength(length + 1);\r\n    }\r\n\r\n    const handleDecrement = () => {\r\n        length !== 1 && setLength(length - 1);\r\n    }\r\n\r\n    return (\r\n        <section id=\"break-settings\">\r\n            <h3 id=\"break-label\">Break Length</h3>\r\n            <div id=\"break-container\">\r\n                <div>\r\n                    <button onClick={handleIncrement} id=\"break-increment\" disabled={active}>\r\n                        <FontAwesomeIcon icon=\"plus-square\" />\r\n                    </button>\r\n                </div>\r\n                <div id=\"break-length\">\r\n                    { length }\r\n                </div>\r\n                <div>\r\n                    <button onClick={handleDecrement} id=\"break-decrement\" disabled={active}>\r\n                        <FontAwesomeIcon icon=\"minus-square\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default function Session({ length, setLength, setTimer, active }) {\r\n\r\n    const handleIncrement = () => {\r\n        const newLength = length + 1;\r\n        if (length !== 60) {\r\n            setLength(newLength);\r\n            setTimer(newLength * 60)\r\n        }\r\n    }\r\n\r\n    const handleDecrement = () => {\r\n        const newLength = length - 1;\r\n        if (length !== 1) {\r\n            setLength(newLength);\r\n            setTimer(newLength * 60)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section id=\"session-settings\">\r\n            <h3 id=\"session-label\">Session Length</h3>\r\n            <div id=\"session-container\">\r\n                <div>\r\n                    <button onClick={handleIncrement} id=\"session-increment\" disabled={active}>\r\n                        <FontAwesomeIcon icon=\"plus-square\" />\r\n                    </button>\r\n                </div>\r\n                <div id=\"session-length\">\r\n                    { length }\r\n                </div>\r\n                <div>\r\n                    <button onClick={handleDecrement} id=\"session-decrement\" disabled={active}>\r\n                        <FontAwesomeIcon icon=\"minus-square\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Timer({timer, sessionState}) {\r\n\r\n    const displayTimer = () => {\r\n        const minutes = (timer / 60) < 10 ?\r\n            `0${Math.floor(timer / 60)}` :\r\n            Math.floor(timer / 60);\r\n\r\n        const seconds = (timer % 60) < 10 ? \r\n            `0${timer % 60}` :\r\n            timer % 60;\r\n\r\n        return `${minutes}:${seconds}`;\r\n    }\r\n\r\n    return (\r\n        <section id=\"timer\">\r\n            <h2 id=\"timer-label\">{sessionState}</h2>\r\n            <div id=\"time-left\">\r\n                {displayTimer()}\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header>\r\n            <h1>Pomodoro Timer</h1>\r\n        </header>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default function Buttons({active, reset, handleStartStop, iconColor}) {   \r\n    return (\r\n        <div id=\"buttons\">\r\n            <button id=\"start_stop\" onClick={handleStartStop}><FontAwesomeIcon icon={ !active ? \"play\" : \"pause\" } style={ { color: `${iconColor}` } } /></button>\r\n            <button id=\"reset\" onClick={reset}><FontAwesomeIcon icon=\"history\" style={ { color: `${iconColor}` } } /></button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport sound from '../sounds/beep.mp3';\r\n\r\nexport default function Audio({ audio }) {\r\n    return (\r\n        <audio id=\"beep\" ref={audio}>\r\n            <source src={sound} type=\"audio/mpeg\" />\r\n        </audio>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\nimport Break from './components/Break';\nimport Session from './components/Session';\nimport Timer from './components/Timer';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faPlusSquare, faMinusSquare, faPlay, faPause, faHistory } from '@fortawesome/free-solid-svg-icons';\nimport Header from './components/Header';\nimport Buttons from './components/Buttons';\nimport Audio from './components/Audio';\n\nlibrary.add(faPlusSquare, faMinusSquare, faPlay, faPause, faHistory);\n\nfunction App() {\n  const audio = useRef(undefined);\n\n  const styles = {\n    main: '#bb3b0e',\n    break: '#335C67',\n    first: '#708160',\n    second: '#dd7631',\n    third: '#900c3f' \n  }\n\n  const [sessionLength, setSessionLength] = useState(25);\n  const [breakLength, setBreakLength] = useState(5);\n  const [sessionState, setSessionState] = useState(\"Session\");\n  const [timer, setTimer] = useState(25 * 60);\n  const [intervalId, setIntervalId] = useState(undefined);\n  const [bgColor, setBgColor] = useState(styles.main);\n\n  useEffect(() => {\n    // toggle between session and break\n    if (timer === 0) {\n      audio.current.play();\n      if (sessionState === 'Session') {\n        setTimer(breakLength * 60);\n        setSessionState('Break');\n      } else {\n        setTimer(sessionLength * 60);\n        setSessionState('Session');\n      }\n    }\n\n    // style background based on state\n    const percentage = (timer / (sessionLength * 60)) * 100;\n\n    if (intervalId) {\n      if (sessionState === 'Break') {\n        setBgColor(styles.break);\n      } else if (percentage < 20) {\n        setBgColor(styles.third);\n      } else if (percentage < 50) {\n        setBgColor(styles.second);\n      } else if (percentage < 100) {\n        setBgColor(styles.first);\n      } else {\n        setBgColor(styles.main);\n      }\n    } else {\n      setBgColor(styles.main);\n    }\n\n    document.body.style.backgroundColor = bgColor;\n\n  }, [sessionState, timer, sessionLength, breakLength, bgColor]);\n\n  const handleStartStop = () => {\n    if (!intervalId) {\n      // if countdown is not running - start/setup interval\n      const newIntervalId = setInterval(() => {\n        setTimer(prevTimer => {\n          const newTimer = prevTimer - 1;\n          if (newTimer >= 0) {\n            return prevTimer - 1;\n          }\n        });\n      }, 1000);\n      setIntervalId(newIntervalId);\n\n    } else {\n      // if countdown is running - stop timer and clear interval\n      clearInterval(intervalId);\n      setIntervalId(undefined);\n    }\n  }\n\n  const reset = () => {\n    audio.current.load();\n    clearInterval(intervalId);\n    setIntervalId(undefined);\n    setBgColor(styles.main);\n    setSessionLength(25);\n    setBreakLength(5);\n    setSessionState('Session');\n    setTimer(25 * 60);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Session length={sessionLength} setLength={setSessionLength} setTimer={setTimer} active={intervalId} />\n      <Break length={breakLength} setLength={setBreakLength} active={intervalId} />\n      <Timer timer={timer} sessionState={sessionState} />\n      <Buttons active={intervalId} reset={reset} handleStartStop={handleStartStop} iconColor={bgColor} />\n      <Audio audio={audio} />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/beep.3e27f30b.mp3\";"],"sourceRoot":""}